from typing import List, Optional
from telegram import InlineKeyboardMarkup, InlineKeyboardButton

def is_admin(user_id: int, admins_env: Optional[str] = None) -> bool:
    if not admins_env:
        return False
    ids = {int(x) for x in admins_env.split(",") if x.strip().isdigit()}
    return user_id in ids

def make_menu_keyboard():
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("‚ñ∂Ô∏è –í–∫–ª—é—á–∏—Ç—å —Ä–∞–¥–∏–æ", callback_data="ron"),
         InlineKeyboardButton("‚è∏ –í—ã–∫–ª—é—á–∏—Ç—å", callback_data="roff")],
        [InlineKeyboardButton("üîÑ –ò—Å—Ç–æ—á–Ω–∏–∫: YouTube", callback_data="src_youtube"),
         InlineKeyboardButton("SoundCloud", callback_data="src_soundcloud")],
        [InlineKeyboardButton("üó≥ –ì–æ–ª–æ—Å–æ–≤–∞—Ç—å", callback_data="vote")]
    ])

def make_search_keyboard(titles: List[str]):
    rows = []
    for i, t in enumerate(titles[:10]):
        rows.append([InlineKeyboardButton(f"{i+1}. {t[:48]}", callback_data=f"pick_{i}")])
    return InlineKeyboardMarkup(rows)

def make_vote_keyboard(genres: List[str]):
    rows = []
    for g in genres:
        rows.append([InlineKeyboardButton(g, callback_data=f"vote_{g}")])
    return InlineKeyboardMarkup(rows)

def format_status(source: str, genre: Optional[str], last_title: Optional[str]):
    return (f"üéµ Music Bot Status\n\n"
            f"–ò—Å—Ç–æ—á–Ω–∏–∫ –ø–æ–∏—Å–∫–∞: {source}\n"
            f"–°—Ç–∞—Ç—É—Å —Ä–∞–¥–∏–æ: {'‚úÖ –í–∫–ª—é—á–µ–Ω–æ' if genre else '‚è∏ –í—ã–∫–ª—é—á–µ–Ω–æ'}\n"
            f"–¢–µ–∫—É—â–∏–π –∂–∞–Ω—Ä: {genre or '‚Äî'}\n"
            f"–ü–æ—Å–ª–µ–¥–Ω–∏–π —Ç—Ä–µ–∫: {last_title or '‚Äî'}\n\n"
            f"–ö–æ–º–∞–Ω–¥—ã: /play, /menu, /vote")
