import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, User
from telegram.ext import ContextTypes

from config import ADMIN_USER_ID, BotState, Source

logger = logging.getLogger(__name__)

# --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ ---
async def is_admin(update: Update, context: ContextTypes.DEFAULT_TYPE) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º."""
    return update.effective_user.id == ADMIN_USER_ID

# --- –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π ---
def format_track_info(track) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç—Ä–µ–∫–µ –≤ –∫—Ä–∞—Å–∏–≤—É—é —Å—Ç—Ä–æ–∫—É."""
    if not track:
        return "(–ø—É—Å—Ç–æ)"
    return f"{track.artist} - {track.title} ({track.duration // 60}:{track.duration % 60:02d})"

def format_status_message(state: BotState) -> str:
    """–°–æ–±–∏—Ä–∞–µ—Ç –ø–æ–ª–Ω–æ–µ —Å—Ç–∞—Ç—É—Å-—Å–æ–æ–±—â–µ–Ω–∏–µ."""
    radio_status = "‚úÖ –í–∫–ª—é—á–µ–Ω–æ" if state.radio_status.is_on else "‚ùå –í—ã–∫–ª—é—á–µ–Ω–æ"
    track_info = format_track_info(state.radio_status.current_track)
    
    return (
        f"<b>üéµ Group Groove AI Status</b>\n\n"
        f"<b>–ò—Å—Ç–æ—á–Ω–∏–∫ –ø–æ–∏—Å–∫–∞:</b> {state.source.value}\n"
        f"<b>–°—Ç–∞—Ç—É—Å —Ä–∞–¥–∏–æ:</b> {radio_status}\n"
        f"<b>–¢–µ–∫—É—â–∏–π –∂–∞–Ω—Ä:</b> {state.radio_status.current_genre.capitalize()}\n"
        f"<b>–ü–æ—Å–ª–µ–¥–Ω–∏–π —Ç—Ä–µ–∫:</b> {track_info}"
    )

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã ---
async def get_menu_keyboard(user_id: int) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –º–µ–Ω—é."""
    buttons = [
        [InlineKeyboardButton("‚ñ∂Ô∏è –í–∫–ª—é—á–∏—Ç—å —Ä–∞–¥–∏–æ", callback_data="radio_on")],
        [InlineKeyboardButton("‚èπÔ∏è –í—ã–∫–ª—é—á–∏—Ç—å —Ä–∞–¥–∏–æ", callback_data="radio_off")],
        [InlineKeyboardButton("‚è≠Ô∏è –°–ª–µ–¥—É—é—â–∏–π —Ç—Ä–µ–∫", callback_data="next_track")],
        [InlineKeyboardButton("üíø –°–º–µ–Ω–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫", callback_data="source_switch")]
    ]
    return InlineKeyboardMarkup(buttons)