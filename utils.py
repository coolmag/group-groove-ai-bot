import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes

from config import ADMIN_IDS, BotState

logger = logging.getLogger(__name__)

async def is_admin(update: Update, context: ContextTypes.DEFAULT_TYPE) -> bool:
    return update.effective_user.id in ADMIN_IDS

def format_track_info(track) -> str:
    if not track:
        return "(–ø—É—Å—Ç–æ)"
    return f"{track.artist} - {track.title} ({track.duration // 60}:{track.duration % 60:02d})"

def format_status_message(state: BotState) -> str:
    radio_status = "‚úÖ –í–∫–ª—é—á–µ–Ω–æ" if state.radio_status.is_on else "‚ùå –í—ã–∫–ª—é—á–µ–Ω–æ"
    track_info = format_track_info(state.radio_status.current_track)
    
    commands_list = (
        "<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
        "<code>/play &lt;–Ω–∞–∑–≤–∞–Ω–∏–µ&gt;</code> - –∑–∞–∫–∞–∑–∞—Ç—å —Ç—Ä–µ–∫\n"
        "<code>/menu</code> - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ –º–µ–Ω—é"
    )

    return (
        f"<b>üéµ Group Groove AI (SoundCloud)</b>\n\n"
        f"<b>–°—Ç–∞—Ç—É—Å —Ä–∞–¥–∏–æ:</b> {radio_status}\n"
        f"<b>–ü–æ—Å–ª–µ–¥–Ω–∏–π —Ç—Ä–µ–∫:</b> {track_info}\n\n"
        f"{commands_list}"
    )

async def get_menu_keyboard(is_radio_on: bool) -> InlineKeyboardMarkup:
    if is_radio_on:
        buttons = [
            [InlineKeyboardButton("‚èπÔ∏è –í—ã–∫–ª—é—á–∏—Ç—å —Ä–∞–¥–∏–æ", callback_data="radio_off"),
             InlineKeyboardButton("‚è≠Ô∏è –°–ª–µ–¥—É—é—â–∏–π —Ç—Ä–µ–∫", callback_data="next_track")]
        ]
    else:
        buttons = [
            [InlineKeyboardButton("‚ñ∂Ô∏è –í–∫–ª—é—á–∏—Ç—å —Ä–∞–¥–∏–æ", callback_data="radio_on")]
        ]
    return InlineKeyboardMarkup(buttons)
