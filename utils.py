import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes

from config import ADMIN_IDS, BotState, Source

logger = logging.getLogger(__name__)

# --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ ---
async def is_admin(update: Update, context: ContextTypes.DEFAULT_TYPE) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º."""
    return update.effective_user.id in ADMIN_IDS

# --- –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π ---
def format_track_info(track) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç—Ä–µ–∫–µ –≤ –∫—Ä–∞—Å–∏–≤—É—é —Å—Ç—Ä–æ–∫—É."""
    if not track:
        return "‚Äî"
    
    minutes, seconds = divmod(track.duration, 60)
    return f"{track.artist} - {track.title} ({minutes}:{seconds:02d})"

def format_status_message(state: BotState) -> str:
    """–°–æ–±–∏—Ä–∞–µ—Ç –ø–æ–ª–Ω–æ–µ —Å—Ç–∞—Ç—É—Å-—Å–æ–æ–±—â–µ–Ω–∏–µ."""
    radio_status = "‚úÖ –í–∫–ª—é—á–µ–Ω–æ" if state.radio_status.is_on else "‚ùå –í—ã–∫–ª—é—á–µ–Ω–æ"
    track_info = format_track_info(state.radio_status.current_track)
    
    commands_list = (
        "<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
        "<code>/play &lt;–Ω–∞–∑–≤–∞–Ω–∏–µ&gt;</code> - –∑–∞–∫–∞–∑–∞—Ç—å —Ç—Ä–µ–∫\n"
        "<code>/menu</code> - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ –º–µ–Ω—é\n"
        "<code>/next</code> - —Å–ª–µ–¥—É—é—â–∏–π —Ç—Ä–µ–∫ (–∞–¥–º–∏–Ω)\n"
        "<code>/source</code> - —Å–º–µ–Ω–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫ (–∞–¥–º–∏–Ω)\n"
        "<code>/ron</code> - –≤–∫–ª—é—á–∏—Ç—å —Ä–∞–¥–∏–æ (–∞–¥–º–∏–Ω)\n"
        "<code>/roff</code> - –≤—ã–∫–ª—é—á–∏—Ç—å —Ä–∞–¥–∏–æ (–∞–¥–º–∏–Ω)"
    )

    return (
        f"<b>üéµ Music Bot Status</b>\n\n"
        f"<b>–ò—Å—Ç–æ—á–Ω–∏–∫ –ø–æ–∏—Å–∫–∞:</b> {state.source.value}\n"
        f"<b>–°—Ç–∞—Ç—É—Å —Ä–∞–¥–∏–æ:</b> {radio_status}\n"
        f"<b>–¢–µ–∫—É—â–∏–π –∂–∞–Ω—Ä:</b> {state.radio_status.current_genre.capitalize()}\n"
        f"<b>–ü–æ—Å–ª–µ–¥–Ω–∏–π —Ç—Ä–µ–∫:</b> {track_info}\n\n"
        f"{commands_list}"
    )

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã ---
async def get_menu_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –º–µ–Ω—é."""
    buttons = [
        [InlineKeyboardButton("‚ñ∂Ô∏è –í–∫–ª. —Ä–∞–¥–∏–æ", callback_data="radio_on"),
         InlineKeyboardButton("‚èπÔ∏è –í—ã–∫–ª. —Ä–∞–¥–∏–æ", callback_data="radio_off")],
        [InlineKeyboardButton("‚è≠Ô∏è –°–ª–µ–¥. —Ç—Ä–µ–∫", callback_data="next_track"),
         InlineKeyboardButton("üíø –°–º–µ–Ω–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫", callback_data="source_switch")]
    ]
    return InlineKeyboardMarkup(buttons)