import os
from dataclasses import dataclass, field
from typing import Dict, Optional
from enum import Enum

BOT_TOKEN = os.getenv("TELEGRAM_TOKEN") or os.getenv("BOT_TOKEN") or ""
PROXY_ENABLED = os.getenv("PROXY_ENABLED", "false").lower() in ("1","true","yes")
PROXY_URL = os.getenv("PROXY_URL", "")

DOWNLOADS_DIR = os.getenv("DOWNLOADS_DIR", "downloads")
os.makedirs(DOWNLOADS_DIR, exist_ok=True)

class Source(str, Enum):
    YOUTUBE = "youtube"
    YTMUSIC = "ytmusic"
    SOUNDCLOUD = "soundcloud"
    JAMENDO = "jamendo"
    ARCHIVE = "archive"

@dataclass
class TrackInfo:
    title: str = ""
    artist: Optional[str] = None
    duration: Optional[int] = None
    source: Optional[str] = None
    url: Optional[str] = None

@dataclass
class RadioStatus:
    is_on: bool = True
    current_genre: Optional[str] = None
    current_track: Optional[TrackInfo] = None
    last_played_time: float = 0.0
    cooldown: int = 60

@dataclass
class BotState:
    @dataclass
    class ChatData:
        status_message_id: Optional[int] = None

    active_chats: Dict[int, ChatData] = field(default_factory=dict)
    source: Source = Source.YOUTUBE
    radio_status: RadioStatus = field(default_factory=RadioStatus)
    search_results: Dict[int, list] = field(default_factory=dict)
    voting_active: bool = False
    vote_counts: Dict[str, int] = field(default_factory=dict)
    playlist: list = field(default_factory=list)

MESSAGES = {
    "welcome": "üëã –ü—Ä–∏–≤–µ—Ç! –Ø Groove AI Bot.",
    "play_usage": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /play <–Ω–∞–∑–≤–∞–Ω–∏–µ>",
    "searching": "üîé –ò—â—É —Ç—Ä–µ–∫–∏...",
    "not_found": "üòï –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.",
    "radio_on": "üìª –†–∞–¥–∏–æ –≤–∫–ª—é—á–µ–Ω–æ! –ú—É–∑—ã–∫–∞ —Å–∫–æ—Ä–æ –Ω–∞—á–Ω–µ—Ç –∏–≥—Ä–∞—Ç—å.",
    "radio_off": "‚è∏ –†–∞–¥–∏–æ –≤—ã–∫–ª—é—á–µ–Ω–æ.",
    "admin_only": "‚õî –ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.",
    "next_track": "‚è≠ –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–∫...",
    "source_switched": "üîÅ –ò—Å—Ç–æ—á–Ω–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á—ë–Ω: {source}",
    "proxy_enabled": "üîó Proxy –≤–∫–ª—é—á—ë–Ω.",
    "proxy_disabled": "üîó Proxy –æ—Ç–∫–ª—é—á—ë–Ω.",
}
def check_environment() -> bool:
    ok = True
    if not BOT_TOKEN:
        print("BOT_TOKEN not set in environment")
        ok = False
    return ok
